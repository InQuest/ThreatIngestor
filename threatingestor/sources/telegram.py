import datetime
from telethon import TelegramClient

from threatingestor.sources import Source
import threatingestor.artifacts

class Plugin(Source):
    """Telegram Source Plugin"""
    def __init__(self, name, session, channel, api_id=None, api_hash=None):
        self.name = name
        self.session = session
        self.channel = f"t.me/{channel}"
        self.auth = [api_id, api_hash]
        self.client = TelegramClient(self.session, int(self.auth[0]), str(self.auth[1]))

    async def collect_msgs(self):
        msgs = []

        for message in self.client.iter_messages(await self.client.get_entity(self.channel)):
            if message.message != None:
                msgs.append('Message: {m}\nAuthor: {a}\nTask autogenerated by ThreatIngestor from source: {s}'.format(s=message.message, a=message.post_author, u=self.channel))

        return msgs

    def run(self, saved_state):
        """
        Returns a list of artifacts and the saved state
        """
        saved_state = datetime.datetime.utcnow().isoformat()[:-7] + 'Z'

        artifact_list = []

        for message in self.client.loop.run_until_complete(Plugin.collect_msgs()):
            title = "Manual Task: Telegram {c}".format(c=self.channel)
            artifact = threatingestor.artifacts.Task(title, self.name, reference_link=self.channel, reference_text=message)
            artifact_list.append(artifact)

        return saved_state, artifact_list
